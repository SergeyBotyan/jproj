# –ú–æ–¥—É–ª—å print_digits —Å–æ–¥–µ—Ä–∂–∏—Ç:  
# 
# –§—É–Ω–∫—Ü–∏—è dig() - –±–∏–±–ª–∏–æ—Ç–µ–∫—É —Ü–∏—Ñ—Ä 0 - 9
# –∞—Ä–≥—É–º–µ–Ω—Ç—ã: d - —Ü–∏—Ñ—Ä–∞(0 - 9).
# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å digline –∏–∑ 6 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ - —Å—Ç—Ä–æ–∫
# 
# –§—É–Ω–∫—Ü–∏—è separator1 - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 6 —Å—Ç—Ä–æ–∫, 5 –ø–µ—Ä–≤—ã—Ö —Å–æ—Å—Ç–æ—è—Ç
# –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤, 6 —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ—á–∫—É –∫–∞–∂–¥—ã–π —á–µ—Ç–Ω—ã–π –≤—ã–∑–æ–≤  
# –ø—Ä–æ–±–µ–ª –∫–∞–∂–¥—ã–π –Ω–µ—á–µ—Ç–Ω—ã–π.
#
# –§—É–Ω–∫—Ü–∏—è col() –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–∞ 
# 1- üü•, 2 - ‚¨ú, 3 - üü®, 4 - üü¶, 5 - üü©.

def col(i):
    if i == 1:
        z = 'üü•'
    elif i == 2:
        z = '‚¨ú'
    elif i == 3:
        z = 'üü®'
    elif i == 4:
        z = 'üü¶'  
    elif i == 5:
        z = 'üü©'
    return z

def dig(d, color):
    digline = dict()
    z = col(color)
    #–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ —Ü–∏—Ñ—Ä—ã –Ω—É–∂–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞
    if d == 0:
        digline[1] = (z + z + z)
        digline[2] = (z + '  ' + z)
        digline[3] = (z + '  ' + z)
        digline[4] = (z + '  ' + z)
        digline[5] = (z + z + z)
    if d == 1:
        digline[1] = (z + z + '  ')
        digline[2] = ('  ' + z + '  ')
        digline[3] = ('  ' + z + '  ')
        digline[4] = ('  ' + z + '  ')
        digline[5] = (z + z + z)
    if d == 2:
        digline[1] = (z + z + z)
        digline[2] = ('    ' + z)
        digline[3] = (z + z + z)
        digline[4] = (z + '    ')
        digline[5] = (z + z + z)
    if d == 3:
        digline[1] = (z + z + z)
        digline[2] = ('    ' + z)
        digline[3] = (z + z + z)
        digline[4] = ('    ' + z)
        digline[5] = (z + z + z)
    if d == 4:
        digline[1] = (z + '  ' + z)
        digline[2] = (z + '  ' + z)
        digline[3] = (z + z + z)
        digline[4] = ('    ' + z)
        digline[5] = ('    ' + z)
    if d == 5:
        digline[1] = (z + z + z)
        digline[2] = (z + '    ')
        digline[3] = (z + z + z)
        digline[4] = ('    ' + z)
        digline[5] = (z + z + z)
    if d == 6:
        digline[1] = (z + z + z)
        digline[2] = (z + '    ')
        digline[3] = (z + z + z)
        digline[4] = (z + '  ' + z)
        digline[5] = (z + z + z)
    if d == 7:
        digline[1] = (z + z + z)
        digline[2] = ('    ' + z)
        digline[3] = ('    ' + z)
        digline[4] = ('    ' + z)
        digline[5] = ('    ' + z)
    if d == 8:
        digline[1] = (z + z + z)
        digline[2] = (z + '  ' + z)
        digline[3] = (z + z + z)
        digline[4] = (z + '  ' + z)
        digline[5] = (z + z + z)
    if d == 9:
        digline[1] = (z + z + z)
        digline[2] = (z + '  ' + z)
        digline[3] = (z + z + z)
        digline[4] = ('    ' + z)
        digline[5] = (z + z + z)
    #–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è
    return (digline)

def separator(color):    
    counter = 0
    digline = dict()
    z = col(color)
    while True:
        digline[1] = ('  ')
        digline[2] = ('  ')
        digline[3] = ('  ')
        digline[4] = ('  ')
        if counter % 2 == 0:
            digline[5] = (z)
        else: 
            digline[5] = ('  ')
        yield digline
        counter += 1
